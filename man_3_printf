.TH PRINTF 3 "March 2024" "Version 1.0" 

.SH NAME
_printf - custom printf function

.SH SYNOPSIS
.B #include "main.h"

.B int _printf(const char *format, ...);

.SH DESCRIPTION
The \fB_printf\fR function is a custom implementation of the standard printf function in C. It allows
formatted output to the standard output stream (stdout) based on the format string provided.

.SH PARAMETERS
.B format
A pointer to a character string that contains the format control string and the optional
arguments. It can contain plain characters and format specifiers.

.SH RETURN VALUE
The function returns the number of characters printed (excluding the null byte used to end output to
strings), or -1 if an error occurs.

.SH FORMAT SPECIFIERS
The following format specifiers are supported:

.IP %c
Print a single character.

.IP %s
Print a string.

.IP %d, %i
Print an integer.

.IP %%
Print a percent sign ("%").

.SH USAGE
The \fB_printf\fR function works similarly to the standard printf function. It accepts a format string
followed by a variable number of arguments. The format string may contain conversion specifiers, each
beginning with a '%' character, and ends with a conversion specifier character.

.SH EXAMPLES
.B #include "main.h"

.B int main(void)
{
    _printf("Hello, %s!\n", "world");
    _printf("This is a character: %c\n", 'U');
    _printf("The answer is %d\n", 55);

    return (0);
}

.SH SEE ALSO
.I printf(3),
.I stdarg(3),
.I unistd(2),
.I string(3)

.SH NOTES
.IP 
The \fB_printf\fR function does not currently support all features of the standard printf function.
